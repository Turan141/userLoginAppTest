{"version":3,"sources":["App.tsx","index.tsx"],"names":["Section","styled","section","Form","form","Label","label","Input","input","RememberMeDiv","div","RememberCheckBox","ConfirmButton","button","ErrorMessage","Userprofile","navigate","useNavigate","checkLogin","Boolean","localStorage","getItem","useEffect","userEmail","onClick","removeItem","LoginWindow","useForm","register","handleSubmit","errors","formState","useState","login","password","logPassFromAxios","setLogPass","showError","setShowError","isFetching","setFetching","axios","get","then","res","logpass","data","onSubmit","setTimeout","trim","setItem","defaultValue","required","style","color","fontSize","type","marginLeft","backgroundColor","disabled","App","rootElement","document","getElementById","ReactDOMClient","render","path","element"],"mappings":"iPASMA,EAAUC,IAAOC,QAAV,2FAMPC,EAAOF,IAAOG,KAAV,6OAYJC,EAAQJ,IAAOK,MAAV,iEAKLC,EAAQN,IAAOO,MAAV,+NAYLC,EAAgBR,IAAOS,IAAV,4CAIbC,EAAmBV,IAAOO,MAAV,0JAShBI,EAAgBX,IAAOY,OAAV,0TAiBbC,EAAeb,IAAOS,IAAV,wJAeLK,EAAwB,WACnC,IAAMC,EAAWC,cAEXC,EAAa,WACHC,QAAQC,aAAaC,QAAQ,gBAEzCL,EAAS,WAIbM,qBAAU,WACRJ,MACC,IAEH,IAMMK,EAAYH,aAAaC,QAAQ,SACvC,OACE,qCACE,4GAAmBE,KACnB,cAACX,EAAD,CAAeY,QAVG,WACpBJ,aAAaK,WAAW,cACxBL,aAAaK,WAAW,SACxBP,KAOE,gDAUOQ,EAAkB,WAE7B,MAIIC,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAKf,EAAuCE,mBAAgB,CACrDC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAyBC,EAAzB,KAIA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMxB,EAAWC,cAIjBK,qBAAU,WACRmB,IACGC,IADH,qDAEGC,MAAK,SAACC,GACL,IAAMC,EAAUD,EAAIE,KAChBD,GACFT,EAAWS,QAGhB,IAEH,IAAM3B,EAAa,WACHC,QAAQC,aAAaC,QAAQ,gBAGzCL,EAAS,aAIbM,qBAAU,WACRJ,MACC,IAyBH,OACE,cAAClB,EAAD,UACE,eAACG,EAAD,CAAM4C,SAAUlB,GAxBoB,SAACiB,GAEvCN,GAAY,GACZQ,YAAW,WACLb,IAEAW,EAAKb,MAAMgB,SAAWd,EAAiBF,OACvCa,EAAKZ,WAAaC,EAAiBD,UAEnCI,GAAa,GACblB,aAAa8B,QAAQ,aAAc,QACnC9B,aAAa8B,QAAQ,QAASJ,EAAKb,OACnCf,KAEAoB,GAAa,IAIjBE,GAAY,KACX,SAKD,UAEGH,EACC,cAACvB,EAAD,6JACE,KACJ,eAACT,EAAD,4CAEE,cAACE,EAAD,aACE4C,aAAa,QACTvB,EAAS,QAAS,CAAEwB,UAAU,MAEnCtB,EAAOG,OACN,sBAAMoB,MAAO,CAAEC,MAAO,MAAOC,SAAU,UAAvC,kHAKJ,eAAClD,EAAD,kDAEE,cAACE,EAAD,eAAWqB,EAAS,WAAY,CAAEwB,UAAU,MAC3CtB,EAAOI,UACN,sBAAMmB,MAAO,CAAEC,MAAO,MAAOC,SAAU,UAAvC,kHAKJ,eAAC9C,EAAD,WACE,cAACE,EAAD,CAAkB6C,KAAK,aACvB,sBAAMH,MAAO,CAAEI,WAAY,MAA3B,4GAEF,cAAC7C,EAAD,CAEEyC,MAAOd,EAAa,CAAEmB,gBAAiB,QAAW,GAClDC,SAAUpB,EACViB,KAAK,SAJP,0EAeD,SAASI,IACd,IAAM5C,EAAWC,cAMjB,OAJAK,qBAAU,WACRN,EAAS,YACR,IAGD,mCACE,4CC/ON,IAAM6C,EAAcC,SAASC,eAAe,QAC/BC,aAA0BH,GAElCI,OACH,cAAC,aAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACP,EAAD,MACzB,cAAC,IAAD,CAAOM,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,gB","file":"static/js/main.d5b872eb.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\n// Styles using styled-components\r\n\r\nconst Section = styled.section`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Form = styled.form`\r\n  position: relative;\r\n  padding: 25px;\r\n  margin: 10px;\r\n  width: 40vw;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  align-content: flex-start;\r\n  align-items: flex-start;\r\n`\r\n\r\nconst Label = styled.label`\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 5vh;\r\n  padding: 5px 0px 5px 0px;\r\n  background-color: #f3f3f3;\r\n  border: none;\r\n  margin-top: 5%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n`\r\n\r\nconst RememberMeDiv = styled.div`\r\n  width: 40vw;\r\n`\r\n\r\nconst RememberCheckBox = styled.input`\r\n  &:checked {\r\n    border-color: red;\r\n    background-color: red;\r\n  }\r\n  border-radius: 1px solid black;\r\n  margin-top: 5%;\r\n`\r\n\r\nconst ConfirmButton = styled.button`\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: red;\r\n    transition: 0.5s ease;\r\n  }\r\n  background-color: blue;\r\n  border: none;\r\n  width: 100%;\r\n  padding-top: 2vh;\r\n  padding-bottom: 2vh;\r\n  border-radius: 5px;\r\n  color: white;\r\n  transition: 0.5s ease;\r\n  margin-top: 5%;\r\n`\r\n\r\nconst ErrorMessage = styled.div`\r\n  width: 40vw;\r\n  border: 1px solid red;\r\n  background-color: rosybrown;\r\n  border-radius: 5px;\r\n  padding: 2vh 2% 2vh 2%;\r\n`\r\n\r\n// Some Types for TS\r\n\r\ntype Inputs = {\r\n  login: string\r\n  password: string\r\n}\r\n\r\nexport const Userprofile: React.FC = () => {\r\n  const navigate = useNavigate()\r\n\r\n  const checkLogin = () => {\r\n    const local = Boolean(localStorage.getItem('isLoggedIn'))\r\n    if (!local) {\r\n      navigate('/login')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkLogin()\r\n  }, [])\r\n\r\n  const logOutHandler = () => {\r\n    localStorage.removeItem('isLoggedIn')\r\n    localStorage.removeItem('email')\r\n    checkLogin()\r\n  }\r\n\r\n  const userEmail = localStorage.getItem('email')\r\n  return (\r\n    <>\r\n      <h1>Здравствуйте, {userEmail}</h1>\r\n      <ConfirmButton onClick={logOutHandler}>Выйти</ConfirmButton>\r\n    </>\r\n  )\r\n}\r\n\r\ntype Axios = {\r\n  login: string\r\n  password: string\r\n}\r\n\r\nexport const LoginWindow: FC = (): JSX.Element => {\r\n  // useFormHook\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>()\r\n\r\n  //I could use Redux RTK + Query for this, but they were not in must-have-stack for this project\r\n  // Preferred to stick to useState hooks\r\n  const [logPassFromAxios, setLogPass] = useState<Axios>({\r\n    login: '',\r\n    password: '',\r\n  })\r\n  const [showError, setShowError] = useState(false)\r\n  const [isFetching, setFetching] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  // get valid log and pass from server\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.jsonbin.io/b/624e8b815912290c00f61a41`)\r\n      .then((res) => {\r\n        const logpass = res.data\r\n        if (logpass) {\r\n          setLogPass(logpass)\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  const checkLogin = () => {\r\n    const local = Boolean(localStorage.getItem('isLoggedIn'))\r\n\r\n    if (local) {\r\n      navigate('/profile')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkLogin()\r\n  }, [])\r\n\r\n  //check if users log and pass matches valid log/pass from server\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    // imitate server response time for 1500ms with setTimeout\r\n    setFetching(true)\r\n    setTimeout(() => {\r\n      if (logPassFromAxios) {\r\n        if (\r\n          data.login.trim() === logPassFromAxios.login &&\r\n          data.password === logPassFromAxios.password\r\n        ) {\r\n          setShowError(false)\r\n          localStorage.setItem('isLoggedIn', 'true')\r\n          localStorage.setItem('email', data.login)\r\n          checkLogin()\r\n        } else {\r\n          setShowError(true)\r\n        }\r\n      }\r\n\r\n      setFetching(false)\r\n    }, 1500)\r\n  }\r\n\r\n  return (\r\n    <Section>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        {/*  show error message if wrong log/pass */}\r\n        {showError ? (\r\n          <ErrorMessage>Неправильный Логин / Пароль</ErrorMessage>\r\n        ) : null}\r\n        <Label>\r\n          Логин\r\n          <Input\r\n            defaultValue=\"test\"\r\n            {...register('login', { required: true })}\r\n          />\r\n          {errors.login && (\r\n            <span style={{ color: 'red', fontSize: '0.7rem' }}>\r\n              Обязательное поле\r\n            </span>\r\n          )}\r\n        </Label>\r\n        <Label>\r\n          Пароль\r\n          <Input {...register('password', { required: true })} />\r\n          {errors.password && (\r\n            <span style={{ color: 'red', fontSize: '0.7rem' }}>\r\n              Обязательное поле\r\n            </span>\r\n          )}\r\n        </Label>\r\n        <RememberMeDiv>\r\n          <RememberCheckBox type=\"checkbox\" />\r\n          <span style={{ marginLeft: '5%' }}>Запомнить пароль</span>\r\n        </RememberMeDiv>\r\n        <ConfirmButton\r\n          // for some reason i forced to use inline style\r\n          style={isFetching ? { backgroundColor: 'gray' } : {}}\r\n          disabled={isFetching}\r\n          type=\"submit\"\r\n        >\r\n          Отправить\r\n        </ConfirmButton>\r\n      </Form>\r\n    </Section>\r\n  )\r\n}\r\n\r\n// App\r\n\r\nexport function App(): JSX.Element {\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    navigate('/login')\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1>Main App</h1>\r\n    </>\r\n  )\r\n}\r\n","import { StrictMode } from 'react'\r\nimport React from 'react'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\r\nimport * as ReactDOMClient from 'react-dom/client'\r\n\r\nimport { App, Userprofile, LoginWindow } from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\nconst root = ReactDOMClient.createRoot(rootElement as Element)\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />} />\r\n        <Route path=\"profile\" element={<Userprofile />} />\r\n        <Route path=\"login\" element={<LoginWindow />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  </StrictMode>\r\n)\r\n"],"sourceRoot":""}